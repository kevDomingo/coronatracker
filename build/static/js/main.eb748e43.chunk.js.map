{"version":3,"sources":["components/Cards/Cards.module.css","images/covidtrackerImage.png","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Typography","gutterBottom","variant","component","Grid","spacing","justify","item","Card","xs","md","cx","card","infected","CardContent","color","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","map","positive","death","date","dateChecked","fetchCountries","countries","name","console","log","Chart","useState","dailyData","setDailyData","useEffect","fetchAPI","lineChart","length","labels","toLocaleDateString","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eb748e43.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3g3tZ\",\"card\":\"Cards_card__2OC1p\",\"infected\":\"Cards_infected__nuczA\",\"recovered\":\"Cards_recovered__19AVV\",\"deaths\":\"Cards_deaths__2Z-U0\"};","module.exports = __webpack_public_path__ + \"static/media/covidtrackerImage.d7265326.png\";","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid, StylesProvider } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\nimport styles from \"./Cards.module.css\";\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate }}) => {\r\n    if(!confirmed) {\r\n        return \"Loading... \";\r\n    }\r\n    \r\n    return(\r\n        <div className={styles.container}>\r\n            <Typography gutterBottom variant=\"h4\" component=\"h2\">Covid-19 Tracker</Typography>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp \r\n                                start={0}\r\n                                end={confirmed.value}\r\n                                duration={2.5}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp \r\n                                start={0}\r\n                                end={recovered.value}\r\n                                duration={2.5}\r\n                                separator=\",\"\r\n                            /></Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp \r\n                                start={0}\r\n                                end={deaths.value}\r\n                                duration={2.5}\r\n                                separator=\",\"\r\n                            /></Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths due to COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n\r\n    if(country) {\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n\r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n        \r\n\r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n    } catch (error) {\r\n        return(error);\r\n    }\r\n}\r\n\r\n// export const fetchDailyData = async () => {\r\n//     try {\r\n//         const { data } = await axios.get(`${url}/daily`);\r\n\r\n//         const modifiedData = data.map((dailyData) => ({\r\n//             confirmed: dailyData.confirmed.total,\r\n//             deaths: dailyData.deaths.total,\r\n//             date: dailyData.reportDate,\r\n\r\n//         }));\r\n\r\n//         return modifiedData;\r\n//     } catch (error) {\r\n//         console.log(error);\r\n//     }\r\n// }\r\n\r\n//New Code (API update):\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(\"https://api.covidtracking.com/v1/us/daily.json\");\r\n\r\n        return data.map(({ positive, recovered, death, dateChecked: date }) => ({ confirmed: positive, recovered, deaths: death, date }));\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data: { countries }} = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};","import React, { useState, useEffect } from \"react\"\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\n\r\nimport styles from \"./Chart.module.css\";\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        \r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n    dailyData.length\r\n        ? (\r\n        <Line \r\n            data={{\r\n                labels: dailyData.map(({ date }) => new Date(date).toLocaleDateString()),\r\n                datasets: [{\r\n                    data: dailyData.map(({ confirmed }) => confirmed),\r\n                    label: \"Infected\",\r\n                    borderColor: \"#3333ff\",\r\n                    fill: true,\r\n                }, {\r\n                    data: dailyData.map(({ deaths }) => deaths),\r\n                    label: \"Deaths\",\r\n                    borderColor: \"red\",\r\n                    borderColor: \"rgba(255, 0, 0, 0.5)\",\r\n                    fill: true,\r\n                }, {\r\n                    data: dailyData.map((data) => data.recovered),\r\n                    label: \"Recovered\",\r\n                    borderColor: \"green\",\r\n                    backgroundColor: \"rgba(0, 255, 0, 0.5)\",\r\n                    fill: true,\r\n                },],\r\n            }}\r\n        />) : null\r\n    );\r\n\r\n\r\n    const barChart = (\r\n        confirmed\r\n        ? (\r\n            <Bar \r\n                data={{\r\n                    labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n                    datasets: [{\r\n                        label: \"People\",\r\n                        backgroundColor: [\r\n                            \"rgba(0, 0, 255, 0.5)\",\r\n                            \"rgba(0, 255, 0, 0.5)\",\r\n                            \"rgba(255, 0, 0, 0.5)\",\r\n                        ],\r\n                        data:[confirmed.value, recovered.value, deaths.value]\r\n                    }]\r\n                }}\r\n                options={{\r\n                    legend: { display: false },\r\n                    title: { display: true, text:`Current state in ${country}` }\r\n                }}\r\n            />\r\n        ) : null\r\n    );\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\n\r\nimport styles from \"./CountryPicker.module.css\";\r\n\r\nimport { fetchCountries } from \"../../api\";\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchAPI();\r\n    }, [setFetchedCountries]);\r\n\r\n\r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">United States</option>\r\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from \"react\"\r\n\r\nimport { Cards, Chart, CountryPicker } from \"./components\"\r\nimport styles from \"./App.module.css\"\r\nimport { fetchData } from \"./api\"\r\n\r\nimport coronaImage from \"./images/covidtrackerImage.png\";\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data: {},\r\n        country: \"\",\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n\r\n        this.setState({ data: fetchedData });\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country);\r\n\r\n        this.setState({ data: fetchedData, country: country });\r\n    }\r\n\r\n    render() {\r\n        const { data, country } = this.state;\r\n\r\n        return(\r\n            <div className={styles.container}>\r\n                {/* <img className={styles.image} src={coronaImage} alt=\"COVID-19\"/> */}\r\n                <Cards data={data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                <Chart data={data} country={country}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\n\r\nimport App from \"./App\"\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2eVut\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1rO4I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3usai\",\"image\":\"App_image__1EEsM\"};"],"sourceRoot":""}